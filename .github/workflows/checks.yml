name: Checks
permissions:
  contents: read
on: 
  pull_request:
  push:
    branches:
      - main

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
      - uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run rubocop
        env:
          RAILS_ENV: test
        run: bundle exec rubocop
  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.11
        ports: [ "5432:5432" ]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
      - name: Cache bundle
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Configure database
        env:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
        run: bin/rails db:prepare
      - name: Run Tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          RAILS_ENV: test
        run: bundle exec rspec
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: coverage-report
          path: coverage
